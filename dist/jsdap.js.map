{"version":3,"sources":["webpack://JsDap/webpack/universalModuleDefinition","webpack://JsDap/webpack/bootstrap","webpack://JsDap/./lib/vbscript.js","webpack://JsDap/./lib/xdr.js","webpack://JsDap/./lib/parser.js","webpack://JsDap/./lib/jsdap.js","webpack://JsDap/./index.js"],"names":["root","factory","exports","module","define","amd","JsDap","window","t","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","IE_HACK","elem","document","createElement","setAttribute","innerHTML","head","appendChild","shl","a","b","readBits","buffer","start","length","offsetLeft","offsetRight","curByte","lastByte","diff","sum","decodeInt","data","bytes","signed","x","max","Math","pow","decodeFloat","precisionBits","exponentBits","byteValue","startBit","mask","bias","signal","exponent","significand","divisor","NaN","Infinity","getBuffer","Array","charCodeAt","dapUnpacker","xdrdata","dapvar","this","_buf","_pos","key","type","toLowerCase","out","child","tmp","getValue","push","map","array","maps","struct","mark","_unpack_uint32","slice","shape","_unpack_bytes","_unpack_string","func","reshape","size","stop","count","_unpack_byte","padding","str","String","fromCharCode","_createClass","writable","_possibleConstructorReturn","ReferenceError","_inherits","TypeError","create","constructor","setPrototypeOf","__proto__","_classCallCheck","atomicTypes","structures","IDENTIFIER_REGEX","pseudoSafeEval","test","replace","eval","contains","item","el","trim","ltrim","rtrim","dapType","attributes","simpleParser","input","stream","expr","regExp","RegExp","match","substr","Error","ddsParser","dds","_this","getPrototypeOf","dataset","consume","peek","declaration","_declaration","id","walk","daplet","includeParent","attr","_grid","_structure","_sequence","_base_declaration","baseType","dimensions","token","parseInt","grid","map_","sequence","structure","dasParser","das","_this2","_target","_attr_container","_attribute","_container","indexOf","names","split","target","_metadata","output","values","tokens","substring","_parser","_xdr","arguments","_vbscript2","url","callback","binary","extraheaders","withCredentials","xml","XMLHttpRequest","ActiveXObject","open","overrideMimeType","setRequestHeader","onreadystatechange","readyState","BinaryToArray","responseBody","toArray","responseText","send","_applydata","proxyUrl","dods","splice","parse"],"mappings":"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","file":"jsdap.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JsDap\"] = factory();\n\telse\n\t\troot[\"JsDap\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\"use strict\";\n\nexport default function(IE_HACK) {\n    if (IE_HACK) {\n        let elem = document.createElement(\"script\");\n        elem.setAttribute(\"type\", \"text/vbscript\");\n\n        elem.innerHTML =\n            \"\\n\\\n            Function BinaryToArray(Binary)\\n Dim i\\n ReDim byteArray(LenB(Binary))\\n\\\n            For i = 1 To LenB(Binary)\\n byteArray(i-1) = AscB(MidB(Binary, i, 1))\\n\\\n            Next\\n BinaryToArray = byteArray\\n End Function\\n \";\n\n        document.head.appendChild(elem);\n    }\n}\n","\"use strict\";\n\n// Lots of code from http://jsfromhell.com/classes/binary-parser\n//    Jonas Raoni Soares Silva\n//    http://jsfromhell.com/classes/binary-parser [v1.0]\n\nconst END_OF_SEQUENCE = \"\\xa5\\x00\\x00\\x00\";\nconst START_OF_SEQUENCE = \"\\x5a\\x00\\x00\\x00\";\n\nexport class dapUnpacker {\n    constructor(xdrdata, dapvar) {\n        this._buf = xdrdata;\n        this.dapvar = dapvar;\n        this._pos = 0;\n    }\n\n    getValue() {\n        var i = this._pos;\n        var type = this.dapvar.type.toLowerCase();\n\n        if (type == \"structure\" || type == \"dataset\") {\n            var out = [],\n                tmp;\n            var dapvar = this.dapvar;\n            for (var child in dapvar) {\n                if (dapvar[child].type) {\n                    this.dapvar = dapvar[child];\n                    tmp = this.getValue();\n                    out.push(tmp);\n                }\n            }\n            this.dapvar = dapvar;\n            return out;\n        } else if (type == \"grid\") {\n            var out = [],\n                tmp;\n            dapvar = this.dapvar;\n\n            this.dapvar = dapvar.array;\n            tmp = this.getValue();\n            out.push(tmp);\n\n            for (var map in dapvar.maps) {\n                this.dapvar = dapvar.maps[map];\n                tmp = this.getValue();\n                out.push(tmp);\n            }\n\n            this.dapvar = dapvar;\n            return out;\n        } else if (type == \"sequence\") {\n            var mark = this._unpack_uint32();\n            var out = [],\n                struct,\n                tmp;\n            dapvar = this.dapvar;\n            while (mark != 2768240640) {\n                struct = [];\n                for (var child in dapvar) {\n                    if (dapvar[child].type) {\n                        this.dapvar = dapvar[child];\n                        tmp = this.getValue();\n                        struct.push(tmp);\n                    }\n                }\n                out.push(struct);\n                mark = this._unpack_uint32();\n            }\n            this.dapvar = dapvar;\n            return out;\n            // This is a request for a base type variable inside a\n            // sequence.\n        } else if (this._buf.slice(i, i + 4) == START_OF_SEQUENCE) {\n            var mark = this._unpack_uint32();\n            var out = [],\n                tmp;\n            while (mark != 2768240640) {\n                tmp = this.getValue();\n                out.push(tmp);\n                mark = this._unpack_uint32();\n            }\n            return out;\n        }\n\n        var n = 1;\n        if (this.dapvar.shape.length) {\n            n = this._unpack_uint32();\n            if (type != \"url\" && type != \"string\") {\n                this._unpack_uint32();\n            }\n        }\n\n        // Bytes?\n        var out;\n        if (type == \"byte\") {\n            out = this._unpack_bytes(n);\n            // String?\n        } else if (type == \"url\" || type == \"string\") {\n            out = this._unpack_string(n);\n        } else {\n            out = [];\n            var func;\n            switch (type) {\n                case \"float32\":\n                    func = \"_unpack_float32\";\n                    break;\n                case \"float64\":\n                    func = \"_unpack_float64\";\n                    break;\n                case \"int\":\n                    func = \"_unpack_int32\";\n                    break;\n                case \"uint\":\n                    func = \"_unpack_uint32\";\n                    break;\n                case \"int16\":\n                    func = \"_unpack_int16\";\n                    break;\n                case \"uint16\":\n                    func = \"_unpack_uint16\";\n                    break;\n                case \"int32\":\n                    func = \"_unpack_int32\";\n                    break;\n                case \"uint32\":\n                    func = \"_unpack_uint32\";\n                    break;\n            }\n            for (var i = 0; i < n; i++) {\n                out.push(this[func]());\n            }\n        }\n\n        if (this.dapvar.shape) {\n            out = reshape(out, this.dapvar.shape);\n        } else {\n            out = out[0];\n        }\n\n        return out;\n    }\n\n    _unpack_byte() {\n        var bytes = 1;\n        var signed = false;\n\n        var i = this._pos;\n        this._pos = i + bytes;\n        var data = this._buf.slice(i, i + bytes);\n        return decodeInt(data, bytes, signed);\n    }\n\n    _unpack_uint16() {\n        var bytes = 4;\n        var signed = false;\n\n        var i = this._pos;\n        this._pos = i + bytes;\n        var data = this._buf.slice(i, i + bytes);\n        return decodeInt(data, bytes, signed);\n    }\n\n    _unpack_uint32() {\n        var bytes = 4;\n        var signed = false;\n\n        var i = this._pos;\n        this._pos = i + bytes;\n        var data = this._buf.slice(i, i + bytes);\n        return decodeInt(data, bytes, signed);\n    }\n\n    _unpack_int16() {\n        var bytes = 4;\n        var signed = true;\n\n        var i = this._pos;\n        this._pos = i + bytes;\n        var data = this._buf.slice(i, i + bytes);\n        return decodeInt(data, bytes, signed);\n    }\n\n    _unpack_int32() {\n        var bytes = 4;\n        var signed = true;\n\n        var i = this._pos;\n        this._pos = i + bytes;\n        var data = this._buf.slice(i, i + bytes);\n        return decodeInt(data, bytes, signed);\n    }\n\n    _unpack_float32() {\n        var precision = 23;\n        var exponent = 8;\n        var bytes = 4;\n\n        var i = this._pos;\n        this._pos = i + bytes;\n        var data = this._buf.slice(i, i + bytes);\n        return decodeFloat(data, precision, exponent);\n    }\n\n    _unpack_float64() {\n        var precision = 52;\n        var exponent = 11;\n        var bytes = 8;\n\n        var i = this._pos;\n        this._pos = i + bytes;\n        var data = this._buf.slice(i, i + bytes);\n        return decodeFloat(data, precision, exponent);\n    }\n\n    _unpack_bytes(count) {\n        var i = this._pos;\n        var out = [];\n        for (var c = 0; c < count; c++) {\n            out.push(this._unpack_byte());\n        }\n        var padding = (4 - count % 4) % 4;\n        this._pos = i + count + padding;\n\n        return out;\n    }\n\n    _unpack_string(count) {\n        var out = [];\n        var n, i, j, data, padding;\n        for (var c = 0; c < count; c++) {\n            n = this._unpack_uint32();\n            i = this._pos;\n            data = this._buf.slice(i, i + n);\n\n            padding = (4 - n % 4) % 4;\n            this._pos = i + n + padding;\n\n            // convert back to string\n            var str = \"\";\n            for (var i = 0; i < n; i++) {\n                str += String.fromCharCode(data[i]);\n            }\n            out.push(str);\n        }\n\n        return out;\n    }\n}\n\nexport function getBuffer(data) {\n    var b = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n        b[i] = data.charCodeAt(i) & 0xff;\n    }\n    return b;\n}\n\nfunction reshape(array, shape) {\n    if (!shape.length) return array[0];\n    var out = [];\n    var size, start, stop;\n    for (var i = 0; i < shape[0]; i++) {\n        size = array.length / shape[0];\n        start = i * size;\n        stop = start + size;\n        out.push(reshape(array.slice(start, stop), shape.slice(1)));\n    }\n    return out;\n}\n\nfunction shl(a, b) {\n    for (++b; --b; a = ((a %= 0x7fffffff + 1) & 0x40000000) == 0x40000000 ? a * 2 : (a - 0x40000000) * 2 + 0x7fffffff + 1);\n    return a;\n}\n\nfunction readBits(buffer, start, length) {\n    if (start < 0 || length <= 0) return 0;\n\n    for (\n        var offsetLeft,\n            offsetRight = start % 8,\n            curByte = buffer.length - (start >> 3) - 1,\n            lastByte = buffer.length + (-(start + length) >> 3),\n            diff = curByte - lastByte,\n            sum =\n                ((buffer[curByte] >> offsetRight) & ((1 << (diff ? 8 - offsetRight : length)) - 1)) +\n                (diff && (offsetLeft = (start + length) % 8) ? (buffer[lastByte++] & ((1 << offsetLeft) - 1)) << ((diff-- << 3) - offsetRight) : 0);\n        diff;\n        sum += shl(buffer[lastByte++], (diff-- << 3) - offsetRight)\n    );\n    return sum;\n}\n\nfunction decodeInt(data, bytes, signed) {\n    var x = readBits(data, 0, bytes * 8);\n    var max = Math.pow(2, bytes * 8);\n    var integer;\n    if (signed && x >= max / 2) {\n        integer = x - max;\n    } else {\n        integer = x;\n    }\n    return integer;\n}\n\nfunction decodeFloat(buffer, precisionBits, exponentBits) {\n    // var buffer = data;\n\n    var bias = Math.pow(2, exponentBits - 1) - 1;\n    var signal = readBits(buffer, precisionBits + exponentBits, 1);\n    var exponent = readBits(buffer, precisionBits, exponentBits);\n    var significand = 0;\n    var divisor = 2;\n    var curByte = buffer.length + (-precisionBits >> 3) - 1;\n    var byteValue, startBit, mask;\n\n    do for (byteValue = buffer[++curByte], startBit = precisionBits % 8 || 8, mask = 1 << startBit; (mask >>= 1); byteValue & mask && (significand += 1 / divisor), divisor *= 2);\n    while ((precisionBits -= startBit));\n\n    return exponent == (bias << 1) + 1\n        ? significand ? NaN : signal ? -Infinity : +Infinity\n        : (1 + signal * -2) * (exponent || significand ? (!exponent ? Math.pow(2, -bias + 1) * significand : Math.pow(2, exponent - bias) * (1 + significand)) : 0);\n}\n","\"use strict\";\n\nconst atomicTypes = [\"byte\", \"int\", \"uint\", \"int16\", \"uint16\", \"int32\", \"uint32\", \"float32\", \"float64\", \"string\", \"url\", \"alias\"];\nconst structures = [\"Sequence\", \"Structure\", \"Dataset\"];\nconst IDENTIFIER_REGEX = \"[\\\\w-/]\";\n\nArray.prototype.contains = function(item) {\n    for (let i = 0, el = this[i]; i < this.length; el = this[++i]) {\n        if (item == el) return true;\n    }\n    return false;\n};\n\nString.prototype.trim = function() {\n    return this.replace(/^\\s+|\\s+$/g, \"\");\n};\n\nString.prototype.ltrim = function() {\n    return this.replace(/^[\\s\\n\\r\\t]+/, \"\");\n};\n\nString.prototype.rtrim = function() {\n    return this.replace(/\\s+$/, \"\");\n};\n\nfunction pseudoSafeEval(str) {\n    if (/^[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]*$/.test(str.replace(/\\\\./g, \"@\").replace(/\"[^\"\\\\\\n\\r]*\"/g, \"\"))) {\n        return eval(\"(\" + str + \")\");\n    }\n    return str;\n}\n\nclass dapType {\n    constructor(type) {\n        this.type = type;\n        this.attributes = {};\n    }\n}\n\nclass simpleParser {\n    constructor(input) {\n        this.stream = input;\n    }\n\n    peek(expr) {\n        let regExp = new RegExp(\"^\" + expr, \"i\");\n        let m = this.stream.match(regExp);\n        if (m) {\n            return m[0];\n        } else {\n            return \"\";\n        }\n    }\n\n    consume(expr) {\n        let regExp = new RegExp(\"^\" + expr, \"i\");\n        // strip any unexpected line breaks to avoid error\n        this.stream = this.stream.replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n        this.stream = this.stream.replace(/\\\\/g, \"/\");\n        let m = this.stream.match(regExp);\n        if (m) {\n            this.stream = this.stream.substr(m[0].length).ltrim();\n            return m[0];\n        } else {\n            throw new Error(\"Unable to parse stream: \" + this.stream.substr(0, 10));\n        }\n    }\n}\n\nexport class ddsParser extends simpleParser {\n    constructor(dds) {\n        super(dds);\n        this.dds = dds;\n    }\n\n    parse() {\n        let dataset = new dapType(\"Dataset\");\n\n        this.consume(\"dataset\");\n        this.consume(\"{\");\n        while (!this.peek(\"}\")) {\n            let declaration = this._declaration();\n            dataset[declaration.name] = declaration;\n        }\n        this.consume(\"}\");\n\n        dataset.id = dataset.name = this.consume(\"[^;]+\");\n        this.consume(\";\");\n\n        // Set id.\n        function walk(daplet, includeParent) {\n            for (let attr in daplet) {\n                let child = daplet[attr];\n                if (child.type) {\n                    child.id = child.name;\n                    if (includeParent) {\n                        child.id = daplet.id + \".\" + child.id;\n                    }\n                    walk(child, true);\n                }\n            }\n        }\n\n        walk(dataset, false);\n\n        return dataset;\n    }\n\n    _declaration() {\n        let type = this.peek(IDENTIFIER_REGEX + \"+\").toLowerCase();\n        switch (type) {\n            case \"grid\":\n                return this._grid();\n            case \"structure\":\n                return this._structure();\n            case \"sequence\":\n                return this._sequence();\n            default:\n                return this._base_declaration();\n        }\n    }\n\n    _base_declaration() {\n        let baseType = new dapType();\n\n        baseType.type = this.consume(IDENTIFIER_REGEX + \"+\");\n        baseType.name = this.consume(IDENTIFIER_REGEX + \"+\");\n\n        baseType.dimensions = [];\n        baseType.shape = [];\n        while (!this.peek(\";\")) {\n            this.consume(\"\\\\[\");\n            let token = this.consume(IDENTIFIER_REGEX + \"+\");\n            if (this.peek(\"=\")) {\n                baseType.dimensions.push(token);\n                this.consume(\"=\");\n                token = this.consume(\"\\\\d+\");\n            }\n            baseType.shape.push(parseInt(token));\n            this.consume(\"\\\\]\");\n        }\n        this.consume(\";\");\n\n        return baseType;\n    }\n\n    _grid() {\n        let grid = new dapType(\"Grid\");\n\n        this.consume(\"grid\");\n        this.consume(\"{\");\n\n        this.consume(\"array\");\n        this.consume(\":\");\n        grid.array = this._base_declaration();\n\n        this.consume(\"maps\");\n        this.consume(\":\");\n        grid.maps = {};\n        while (!this.peek(\"}\")) {\n            let map_ = this._base_declaration();\n            grid.maps[map_.name] = map_;\n        }\n        this.consume(\"}\");\n\n        grid.name = this.consume(IDENTIFIER_REGEX + \"+\");\n        this.consume(\";\");\n\n        return grid;\n    }\n\n    _sequence() {\n        let sequence = new dapType(\"Sequence\");\n\n        this.consume(\"sequence\");\n        this.consume(\"{\");\n        while (!this.peek(\"}\")) {\n            let declaration = this._declaration();\n            sequence[declaration.name] = declaration;\n        }\n        this.consume(\"}\");\n\n        sequence.name = this.consume(IDENTIFIER_REGEX + \"+\");\n        this.consume(\";\");\n\n        return sequence;\n    }\n\n    _structure() {\n        let structure = new dapType(\"Structure\");\n\n        this.consume(\"structure\");\n        this.consume(\"{\");\n        while (!this.peek(\"}\")) {\n            let declaration = this._declaration();\n            structure[declaration.name] = declaration;\n        }\n        this.consume(\"}\");\n\n        structure.name = this.consume(IDENTIFIER_REGEX + \"+\");\n\n        structure.dimensions = [];\n        structure.shape = [];\n        while (!this.peek(\";\")) {\n            this.consume(\"\\\\[\");\n            let token = this.consume(IDENTIFIER_REGEX + \"+\");\n            if (this.peek(\"=\")) {\n                structure.dimensions.push(token);\n                this.consume(\"=\");\n                token = this.consume(\"\\\\d+\");\n            }\n            structure.shape.push(parseInt(token));\n            this.consume(\"\\\\]\");\n        }\n\n        this.consume(\";\");\n\n        return structure;\n    }\n}\n\nexport class dasParser extends simpleParser {\n    constructor(das, dataset) {\n        super(das);\n        this.das = das;\n        this.dataset = dataset;\n    }\n\n    parse() {\n        this._target = this.dataset;\n\n        this.consume(\"attributes\");\n        this.consume(\"{\");\n        while (!this.peek(\"}\")) {\n            this._attr_container();\n        }\n        this.consume(\"}\");\n\n        return this.dataset;\n    }\n\n    _attr_container() {\n        if (atomicTypes.contains(this.peek(IDENTIFIER_REGEX + \"+\").toLowerCase())) {\n            this._attribute(this._target.attributes);\n\n            if (this._target.type == \"Grid\") {\n                for (let map in this._target.maps) {\n                    if (this.dataset[map]) {\n                        let map = this._target.maps[map];\n                        for (let name in map.attributes) {\n                            this.dataset[map].attributes[name] = map.attributes[name];\n                        }\n                    }\n                }\n            }\n        } else {\n            this._container();\n        }\n    }\n\n    _container() {\n        let name = this.consume(\"[\\\\w-_\\\\./]+\");\n        this.consume(\"{\");\n\n        if (name.indexOf(\".\") > -1) {\n            let names = name.split(\".\");\n            let target = this._target;\n            for (let i = 0; i < names.length; i++) {\n                this._target = this._target[names[i]];\n            }\n\n            while (!this.peek(\"}\")) {\n                this._attr_container();\n            }\n            this.consume(\"}\");\n\n            this._target = target;\n        } else if (structures.contains(this._target.type) && this._target[name]) {\n            let target = this._target;\n            this._target = target[name];\n\n            while (!this.peek(\"}\")) {\n                this._attr_container();\n            }\n            this.consume(\"}\");\n\n            this._target = target;\n        } else {\n            this._target.attributes[name] = this._metadata();\n            this.consume(\"}\");\n        }\n    }\n\n    _metadata() {\n        let output = {};\n        while (!this.peek(\"}\")) {\n            if (atomicTypes.contains(this.peek(IDENTIFIER_REGEX + \"+\").toLowerCase())) {\n                this._attribute(output);\n            } else {\n                let name = this.consume(IDENTIFIER_REGEX + \"+\");\n                this.consume(\"{\");\n                output[name] = this._metadata();\n                this.consume(\"}\");\n            }\n        }\n        return output;\n    }\n\n    _attribute(object) {\n        let type = this.consume(IDENTIFIER_REGEX + \"+\");\n        let name = this.consume(IDENTIFIER_REGEX + \"+\");\n\n        let values = [];\n        while (!this.peek(\";\")) {\n            let value = this.consume('\".*?[^\\\\\\\\]\"|[^;,]+');\n\n            if (type.toLowerCase() == \"string\" || type.toLowerCase() == \"url\") {\n                value = pseudoSafeEval(value);\n            } else if (type.toLowerCase() == \"alias\") {\n                let target, tokens;\n                if (value.match(/^\\\\./)) {\n                    tokens = value.substring(1).split(\".\");\n                    target = this.dataset;\n                } else {\n                    tokens = value.split(\".\");\n                    target = this._target;\n                }\n\n                for (let i = 0; i < tokens.length; i++) {\n                    let token = tokens[i];\n                    if (target[token]) {\n                        target = target[token];\n                    } else if (target.array.name == token) {\n                        target = target.array;\n                    } else if (target.maps[token]) {\n                        target = target.maps[token];\n                    } else {\n                        target = target.attributes[token];\n                    }\n                    value = target;\n                }\n            } else {\n                if (value.toLowerCase() == \"nan\") {\n                    value = NaN;\n                } else {\n                    value = pseudoSafeEval(value);\n                }\n            }\n            values.push(value);\n            if (this.peek(\",\")) {\n                this.consume(\",\");\n            }\n        }\n        this.consume(\";\");\n\n        if (values.length == 1) {\n            values = values[0];\n        }\n\n        object[name] = values;\n    }\n}\n","\"use strict\";\n\nimport {dasParser, ddsParser} from \"./parser.js\";\nimport {dapUnpacker, getBuffer} from \"./xdr.js\";\nimport ieHack from \"./vbscript.js\";\n\nexport default class JsDap {\n    constructor(IE_HACK = false) {\n        this.IE_HACK = IE_HACK;\n        ieHack(this.IE_HACK);\n    }\n\n    proxyUrl(url, callback, binary, extraheaders, withCredentials) {\n        let xml = undefined;\n\n        // Mozilla/Safari/IE7+\n        if (window.XMLHttpRequest) {\n            xml = new XMLHttpRequest();\n            // IE6\n        } else if (window.ActiveXObject) {\n            xml = new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n\n        xml.open(\"GET\", url, true);\n        if (withCredentials === true) xml.withCredentials = true;\n        if (xml.overrideMimeType) {\n            xml.overrideMimeType(\"text/plain; charset=x-user-defined\");\n        } else {\n            xml.setRequestHeader(\"Accept-Charset\", \"x-user-defined\");\n        }\n        if (extraheaders) {\n            for (let key in extraheaders) {\n                xml.setRequestHeader(key, extraheaders[key]);\n            }\n        }\n\n        xml.onreadystatechange = function() {\n            if (xml.readyState == 4) {\n                if (!binary) {\n                    callback(xml.responseText);\n                } else if (this.IE_HACK) {\n                    callback(BinaryToArray(xml.responseBody).toArray());\n                } else {\n                    callback(getBuffer(xml.responseText));\n                }\n            }\n        };\n        xml.send(\"\");\n    }\n\n    /** Flatten the data array as data attributes of elements of daplet */\n    _applydata(data, daplet) {\n        let i = 0;\n        for (let child in daplet) {\n            if (!daplet[child].type) continue;\n            daplet[child].data = data[i++];\n            if (daplet[child].type == \"Structure\") {\n                this._applydata(daplet[child].data, daplet[child]);\n            }\n        }\n    }\n\n    /**\n     * Load the dataset and call the callback with (data) where data is an array of data\n     * the url must be a url with .dods extension.\n     * @params:\n     * - url (string): the url (must be a .dods url, it might have additonnal slicing OpENDAP query string)\n     * - callback (function(data)): the callback which will receive parsed data.\n     * - extraheaders (map/object) : Javascript Object or map that contains keys and values of additonnal headers for the request.\n     */\n    loadData(url, callback, extraheaders, withCredentials) {\n        this.proxyUrl(\n            url,\n            dods => {\n                let dds = \"\";\n                while (!dds.match(/\\nData:\\n$/)) {\n                    let c = dods.splice(0, 1);\n                    if (c.length === 0) throw new Error(\"Error reading data, are you sur this is a .dods request ?\");\n                    dds += String.fromCharCode(c);\n                }\n                dds = dds.substr(0, dds.length - 7);\n\n                let daplet = new ddsParser(dds).parse();\n                let data = new dapUnpacker(dods, daplet).getValue();\n                this._applydata(data, daplet);\n                callback(daplet);\n            },\n            true,\n            extraheaders,\n            withCredentials\n        );\n    }\n\n    /**\n     * Load the dataset and call the callback with (dataset) where dataset is the dataset \"metadata\";\n     * - url (string): the url (must be a bare OPeNDAP url, without \"format extension\" nor query parameters).\n     * - callback (function(data)): the callback which will receive parsed data.\n     * - extraheaders (map/object) : Javascript Object or map that contains keys and values of additonnal headers for the request.\n     */\n    loadDataset(url, callback, extraheaders, withCredentials) {\n        // Load DDS.\n        this.proxyUrl(\n            url + \".dds\",\n            dds => {\n                let dataset = new ddsParser(dds).parse();\n\n                // Load DAS.\n                this.proxyUrl(\n                    url + \".das\",\n                    function(das) {\n                        dataset = new dasParser(das, dataset).parse();\n                        callback(dataset);\n                    },\n                    false,\n                    extraheaders,\n                    withCredentials\n                );\n            },\n            false,\n            extraheaders,\n            withCredentials\n        );\n    }\n}\n","import JsDap from \"./lib/jsdap.js\";\n\nexport default JsDap;\n"],"sourceRoot":""}